/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2106                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

vertices
(
    (0 0 0)		// ponto 0
    (0.045 0 0)		// ponto 1
    (0.06 0 0)		// ponto 2
    (0.15 0 0)		// ponto 3
    (0.15 0.015 0)	// ponto 4
    (0.06 0.015 0)	// ponto 5
    (0.06 0.06 0)	// ponto 6
    (0.045 0.06 0)	// ponto 7
    (0.045 0.015 0)	// ponto 8
    (0 0.015 0)		// ponto 9
    
    (0 0 0.01)		// ponto 10
    (0.045 0 0.01)	// ponto 11
    (0.06 0 0.01)	// ponto 12
    (0.15 0 0.01)	// ponto 13
    (0.15 0.015 0.01)	// ponto 14
    (0.06 0.015 0.01)	// ponto 15
    (0.06 0.06 0.01)	// ponto 16
    (0.045 0.06 0.01)	// ponto 17
    (0.045 0.015 0.01)	// ponto 18
    (0 0.015 0.01)	// ponto 19
);

blocks
(
    hex (0 1 8 9 10 11 18 19) (32 32 1) simpleGrading (0.125 1 1)
    hex (1 2 5 8 11 12 15 18) (32 32 1) simpleGrading (1 1 1)
    hex (8 5 6 7 18 15 16 17) (32 32 1) simpleGrading (1 8 1)
    hex (2 3 4 5 12 13 14 15) (64 32 1) simpleGrading (10 1 1)
);

edges
(
);

boundary
(
    walls
    {
        type wall;
        faces
        (
            (18 8 9 19)
            (8 18 17 7)
            (15 5 6 16)
            (14 4 5 15)
        );
    }
    
    lowerWall
    {
        type wall;
        faces
        (
            (1 11 10 0)
            (2 12 11 1)
            (3 13 12 2)
        );
    }
    
    inletE
    {
        type patch;
        faces
        (
            (0 10 19 9)
        );
    }
    
    inletN
    {
        type patch;
        faces
        (
            (16 6 7 17)  
        );
    }
    
    outlet
    {
        type patch;
        faces
      	(    
      	    (13 3 4 14)
      	);    
    }
    
    frontAndBack
    {
        type empty;
        faces
        (
            (0 9 8 1)
            (1 8 5 2)
            (8 7 6 5)
            (2 5 4 3)
            
            (10 19 18 11)
            (11 18 15 12)
            (18 17 16 15)
            (12 15 14 13)
        );
    }
);


// ************************************************************************* //
